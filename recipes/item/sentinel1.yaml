paths:
  - /neodc/sentinel1a/data
  - /neodc/sentinel1b/data

type: item

id:
  # Use directory for ID
  - method: default
    inputs:
      defaults:
        item_id: $instance_id


extraction_methods:
  - method: regex
    inputs:
      regex: '^\/(?:[^/]*/)(?P<platform>\w*)(?:[^/]*/){2}(?P<instrument_mode>\w+)/(?P<processing_level>[A-Z0-9]+)_(?P<product_type>[\w]+)/(?P<processing_software>[A-Z]+)_(?P<product_version>\w+)/(?:[^_]*_){5}(?P<start_datetime>[0-9T]+)_(?P<end_datetime>[0-9T]+)_(?P<orbit>\d+)'

  - method: iso_date
    inputs:
      date_keys:
        - start_datetime
        - end_datetime
      formats:
        - '%Y%m%dT%H%M%S'

  # Extract information from the manifest file
  - method: xml
    inputs:
      extraction_keys:
        - name: Instrument Family Name
          key: .//safe:platform/safe:instrument/safe:familyName
        - name: Instrument Family Name Abbreviation
          key: .//safe:platform/safe:instrument/safe:familyName
          attribute: abbreviation
        - name: Platform Number
          key: .//safe:platform/safe:number
        - name: NSSDC Identifier
          key: .//safe:platform/safe:nssdcIdentifier
        - name: Start Relative Orbit Number
          key: .//safe:orbitReference/safe:relativeOrbitNumber
        - name: Start Orbit Number
          key: .//safe:orbitReference/safe:orbitNumber
        - name: Instrument Mode
          key: .//safe:platform/safe:instrument/safe:extension/s1sarl1:instrumentMode/s1sarl1:mode
        - name: Slice Number
          key: .//s1sarl1:standAloneProductInformation/s1sarl1:sliceNumber
        - name: Total Slices
          key: .//s1sarl1:standAloneProductInformation/s1sarl1:totalSlices
        - name: Polarisation
          key: .//s1sarl1:standAloneProductInformation/s1sarl1:transmitterReceiverPolarisation
        - name: Processing Version
          key: .//safe:processing/safe:facility/safe:software
          attribute: version
        - name: Orbit Direction
          key: .//safe:orbitReference/safe:extension/s1:orbitProperties/s1:pass
        - name: Coordinates
          key: .//safe:frameSet/safe:frame/safe:footPrint/gml:coordinates
        - name: EPSG URL
          key: .//safe:frameSet/safe:frame/safe:footPrint
          attribute: srsName
      namespaces:
        safe: http://www.esa.int/safe/sentinel-1.0
        gml: http://www.opengis.net/gml
        s1sarl1: http://www.esa.int/safe/sentinel-1.0/sentinel-1/sar/level-1
        s1: http://www.esa.int/safe/sentinel-1.0/sentinel-1

  - method: regex
    inputs:
      input_term: EPSG URL
      regex: '(?P<EPSG>[^\#]+$)'

  - method: lambda
    inputs:
      function: 'lambda coords_string: [[float(i), float(k)]for i,k in zip(coords_string.strip().replace(" ",",").split(",")[1::2], coords_string.strip().replace(" ",",").split(",")[0::2])]'
      input_args:
        - $Coordinates
      output_key: coords

  - method: geometry_polygon
    inputs:
      coordinates_term: coords

  - method: geometry_to_bbox
    inputs:
      type: polygon

  - method: regex
    inputs:
      regex: '(?P<pathroot>.+?)\.'

  - method: string_template
    inputs:
      template: '{pathroot}(.zip)'
      output_key: data_regex

  - method: string_template
    inputs:
      template: '{pathroot}(.manifest|.metadata_only.zip|_checksum)'
      output_key: metadata_regex

  - method: string_template
    inputs:
      template: '{pathroot}.png'
      output_key: thumbnail_regex

  - method: elasticsearch_assets
    inputs:
      search_field: path
      regex_term: data_regex
      fields:
        - name: size
        - name: location
      extraction_methods:
        - method: default
          inputs:
            defaults:
              roles: ["data"]

  - method: elasticsearch_assets
    inputs:
      search_field: path
      regex_term: metadata_regex
      fields:
        - name: size
        - name: location
      extraction_methods:
        - method: default
          inputs:
            defaults:
              roles: ["metadata"]


  - method: elasticsearch_assets
    inputs:
      search_field: path
      regex_term: thumbnail_regex
      fields:
        - name: size
        - name: location
      extraction_methods:
        - method: default
          inputs:
            defaults:
              roles: ["thumbnail"]


  - method: rename_assets
    inputs:
      rename:
        - name: data_zip
          regex: '.*.zip'
        - name: metadata_zip
          regex: '.*.metadata_only.zip'
        - name: checksum
          regex: '.*_checksum'
        - name: manifest
          regex: '.*.manifest'
        - name: thumbnail
          regex: '.*.png'
      output_key: data_regex

  - method: lambda
    inputs:
      function: 'lambda assets: {asset_key: asset_value | {"href": "https://dap.ceda.ac.uk" + asset_value["href"]} for asset_key, asset_value in sorted(assets.items())}'
      input_args:
        - $assets
      output_key: assets

  - method: lambda
    inputs:
      function: 'lambda uri: uri.replace("/badc/sentinel1b/data", "").replace("/badc/sentinel1a/data", "").replace(".manifest", "").strip("/").replace("/", ".")'
      input_args:
        - $uri
      output_key: instance_id

  - method: datetime_bound_to_centroid

  - method: remove
    inputs:
      keys:
        - pathroot
        - data_regex
        - metadata_regex
        - thumbnail_regex
        - EPSG URL
        - Coordinates
        - coords
        - uri

member_of:
  - recipes/collection/sentinel1.yaml
